ORIGINAL

private void executeNextProcess() {
        if (runningProcess == null && !processQueue.isEmpty()) {
            runningProcess = processQueue.poll();
            int memorySize = runningProcess.getMemorySize();
            int startAddress = memoryManager.allocateMemory(memorySize);
            if (startAddress != -1) {
                System.out.println("Proces " + runningProcess.getName() + " je započet sa početnom adresom " + runningProcess.getStartAddress());
                assembler.runInstructions(runningProcess.getContent());
            } else {
                System.out.println("Nedovoljno memorije za pokretanje procesa " + runningProcess.getName());
                processQueue.add(runningProcess); // Vraćanje procesa u red čekanja
                runningProcess = null;
            }
        }
    }

    NOVO

     private void executeNextProcess() {
            if (runningProcess == null && !processQueue.isEmpty()) {
                runningProcess = processQueue.poll();
                int memorySize = runningProcess.getMemorySize();
                int startAddress = memoryManager.allocateMemory(memorySize);
                if (startAddress != -1) {
                    runningProcess.setStartAddress(startAddress); // Postavljanje početne adrese
                    System.out.println("Proces " + runningProcess.getName() + " je započet sa početnom adresom " + runningProcess.getStartAddress());
                    assembler.runInstructions(runningProcess.getContent());
                } else {
                    System.out.println("Nedovoljno memorije za pokretanje procesa " + runningProcess.getName());
                    processQueue.add(runningProcess); // Vraćanje procesa u red čekanja
                    runningProcess = null;
                }
            }
        }